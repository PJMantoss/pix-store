{"version":3,"sources":["context/appContext.js","components/Header.js","hooks/useHover.js","components/Image.js","utils/index.js","pages/Photos.js","components/CartItem.js","pages/Cart.js","App.js","reportWebVitals.js","index.js"],"names":["AppContext","createContext","AppContextProvider","props","useState","photos","setPhotos","cartItems","setCartItems","useEffect","fetch","then","res","json","data","catch","err","console","error","Provider","value","toggleFavorite","id","updatedArr","map","photo","isFavorite","addToCart","newItem","prevItems","removeFromCart","filter","item","emptyCart","children","Header","cartClassName","useContext","length","to","className","useHover","hovered","setHovered","ref","useRef","enter","leave","current","addEventListener","removeEventListener","Image","img","src","url","alt","onClick","alreadyInCart","some","cartIcon","getClass","i","Photos","photosData","CartItem","binStyle","width","Cart","btnText","setBtnText","totalCostDisplay","toLocaleString","style","currency","cartItemElements","setTimeout","log","textAlign","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fe722e31.chunk.js","sourcesContent":["import React, {createContext, useState, useEffect} from 'react';\n\nconst AppContext = createContext();\n\nfunction AppContextProvider(props){\n    const [photos, setPhotos] = useState([]);\n    const [cartItems, setCartItems] = useState([]);\n\n    const addToCart = newItem => {\n        setCartItems(prevItems => [...prevItems, newItem])\n    }\n\n    const removeFromCart = id => {\n        setCartItems(prevItems => prevItems.filter(item => item.id !== id))\n    }\n\n    const url = \"https://raw.githubusercontent.com/bobziroll/scrimba-react-bootcamp-images/master/images.json\";\n\n    useEffect(() => {\n        fetch(url)\n          .then(res => res.json())\n          .then(data => setPhotos(data))\n          .catch(err => console.error(err))\n    }, [])\n\n    const toggleFavorite = id => {\n        const updatedArr = photos.map(photo => {\n            if(photo.id === id){\n                return {...photo, isFavorite: !photo.isFavorite}\n            }\n            return photo;\n        })\n\n        setPhotos(updatedArr)\n    }\n\n    const emptyCart = () => {\n        setCartItems([]);\n    }\n\n    return(\n        <AppContext.Provider value={{photos, toggleFavorite, addToCart, cartItems, removeFromCart, emptyCart}}>\n            {props.children}\n        </AppContext.Provider>\n    )\n};\n\nexport {AppContextProvider, AppContext};","import React, {useContext} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {AppContext} from \"../context/appContext\";\nimport \"../App.css\"\n\n\nfunction Header(){\n    const {cartItems} = useContext(AppContext);\n\n    const cartClassName = cartItems.length > 0 ? \"ri-shopping-cart-fill\" : \"ri-shopping-cart-line\"\n   \n    return(\n        <div>\n            <header>\n                <Link to=\"/\"><h2>Pix Store</h2></Link>\n                <Link to=\"/cart\">\n                    <i className={`${cartClassName} ri-fw ri-2x`}></i>\n                </Link>\n            </header>\n        </div>\n    )\n}\n\nexport default Header;","import {useState, useRef, useEffect} from \"react\";\n\nfunction useHover(){\n    const [hovered, setHovered] = useState(false);\n\n    const ref = useRef(null);\n\n    const enter = () => {\n        setHovered(true);\n    }\n\n    const leave = () => {\n        setHovered(false);\n    }\n\n    useEffect(() => {\n        ref.current.addEventListener(\"mouseenter\", enter);\n        ref.current.addEventListener(\"mouseleave\", leave);\n\n        return () => {\n            ref.current.removeEventListener(\"mouseenter\", enter);\n            ref.current.removeEventListener(\"mouseleave\", leave);\n        }\n    }, []);\n\n    return [hovered, ref];\n}\n\nexport default useHover;","import React, {useContext} from \"react\";\nimport PropTypes from 'prop-types';\nimport {AppContext} from '../context/appContext';\nimport useHover from \"../hooks/useHover\";\n\nfunction Image({className, img}){\n    //hover state\n    // const [hovered, setHovered] = useState(false);\n    const [hovered, ref] = useHover();\n\n    const {toggleFavorite, addToCart, cartItems, removeFromCart} = useContext(AppContext);\n    \n    //conditional variables\n    const heartIcon = () => {\n        if(hovered){\n            return <i onClick={() => toggleFavorite(img.id)} className=\"ri-heart-line favorite\"></i>;\n        }else if(img.isFavorite){\n            return <i onClick={() => toggleFavorite(img.id)} className=\"ri-heart-fill favorite\"></i>\n        } else {\n            return null;\n        }\n    }\n\n    const cartIcon = () => {\n        const alreadyInCart = cartItems.some(item => item.id === img.id)\n        if(hovered){\n            return <i className=\"ri-add-circle-line cart\" onClick={() => addToCart(img)}></i>\n        } else if(alreadyInCart){\n            return <i className=\"ri-shopping-cart-fill cart\" onClick={() => removeFromCart(img.id)}></i>\n        }\n    }\n\n    return(\n        <div \n            ref={ref}\n            className={`${className} image-container`}\n        >\n            <img src={img.url} className=\"image-grid\" alt=\"picture-of-an-object\" />\n            {heartIcon()}\n            {cartIcon()}\n        </div>\n    );\n}\n\nImage.propTypes = {\n    className: PropTypes.string,\n    img: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        url: PropTypes.string.isRequired,\n        isFavorite: PropTypes.bool\n    })\n}\n\nexport default Image;","export function getClass(i){\n    if (i % 5 === 0){\n        return 'big';\n    } else if(i % 6 === 0){\n        return 'wide';\n    }\n}","import React, { useContext } from 'react';\nimport Image from '../components/Image';\nimport {AppContext} from '../context/appContext';\nimport {getClass} from '../utils';\n\nfunction Photos(){\n    const {photos} = useContext(AppContext);\n\n    const photosData = photos.map((photo, i) => (\n        <Image key={photo.id} img={photo} className={getClass(i)} />\n    ))\n    \n    return(\n        <main className=\"photos\">\n            {photosData}\n        </main>\n    )\n}\n\nexport default Photos;","import React, {useContext} from \"react\";\nimport {AppContext} from \"../context/appContext\";\nimport useHover from \"../hooks/useHover\";\nimport PropTypes from \"prop-types\";\n\nfunction CartItem({item}){\n    const {removeFromCart} = useContext(AppContext);\n    const [hovered, ref] = useHover()\n    // const [hovered, setHovered] = useState(false);\n\n    const binStyle = hovered ? \"ri-delete-bin-fill\" : \"ri-delete-bin-line\"\n    return(\n       <div className=\"cart-item\">\n           <i \n               className={binStyle} \n            //    onMouseEnter={() => setHovered(true)} \n            //    onMouseLeave={() => setHovered(false)} \n               ref={ref}\n               onClick={() => removeFromCart(item.id)}\n            ></i>\n           <img src={item.url} width=\"130px\" alt=\"selected-pictures\"/>\n           <p>$6.00</p>\n       </div>\n    )\n}\n\nCartItem.propTypes = {\n    item: PropTypes.shape({\n        url: PropTypes.string.isRequired\n    })\n}\n\nexport default CartItem;","import React, { useContext, useState } from 'react';\nimport {AppContext} from \"../context/appContext\";\nimport CartItem from \"../components/CartItem\";\n\nfunction Cart(){\n    const [btnText, setBtnText] = useState(\"Place Order\")\n    const {cartItems, emptyCart} = useContext(AppContext);\n\n    const totalCost = 6 * cartItems.length;\n\n    const totalCostDisplay = totalCost.toLocaleString(\"en-US\", {style: \"currency\", currency: \"USD\"});\n\n    const cartItemElements = cartItems.map(item => (\n        <CartItem key={item.id} item={item} />\n    ))\n\n    const placeOrder = () => {\n        setBtnText(\"Ordering...\");\n        setTimeout(() => {\n            console.log(\"Order Placed!\")\n            setBtnText(\"Place Order\")\n            emptyCart()\n        }, 3000);\n    }\n\n    return(\n        <main className=\"cart-page\">\n            <h1>Checkout</h1>\n            {cartItemElements}\n            <p className=\"total-cost\">Total: {totalCostDisplay}</p>\n            {\n                cartItems.length > 0 ? \n                <div className=\"order-button\">\n                    <button onClick={() => placeOrder()}>{btnText}</button>\n                </div> :\n                <p style={{textAlign: \"center\"}}>You have no items in your cart!</p>\n            }\n        </main>\n    )\n}\n\nexport default Cart;","import React from \"react\"\nimport Header from './components/Header';\nimport Photos from './pages/Photos';\nimport Cart from \"./pages/Cart\";\nimport {Switch, Route} from 'react-router-dom';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Photos />\n        </Route>\n\n        <Route path=\"/cart\">\n          <Cart />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter as Router} from \"react-router-dom\";\nimport {AppContextProvider} from './context/appContext';\n\nReactDOM.render(\n  <AppContextProvider>\n    <Router>\n      <App />\n    </Router>\n  </AppContextProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}