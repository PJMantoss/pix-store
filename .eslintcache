[{"/home/mantoss/pix-store/src/index.js":"1","/home/mantoss/pix-store/src/App.js":"2","/home/mantoss/pix-store/src/reportWebVitals.js":"3","/home/mantoss/pix-store/src/components/Header.js":"4","/home/mantoss/pix-store/src/pages/Photos.js":"5","/home/mantoss/pix-store/src/pages/Cart.js":"6","/home/mantoss/pix-store/src/context/appContext.js":"7","/home/mantoss/pix-store/src/components/Image.js":"8","/home/mantoss/pix-store/src/utils/index.js":"9","/home/mantoss/pix-store/src/components/CartItem.js":"10","/home/mantoss/pix-store/src/hooks/useHover.js":"11","/home/mantoss/pix-store/src/components/Footer.js":"12"},{"size":645,"mtime":1607675234124,"results":"13","hashOfConfig":"14"},{"size":528,"mtime":1607877727454,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1606739673075,"results":"16","hashOfConfig":"14"},{"size":622,"mtime":1607414460072,"results":"17","hashOfConfig":"14"},{"size":484,"mtime":1607205012347,"results":"18","hashOfConfig":"14"},{"size":1287,"mtime":1607523739150,"results":"19","hashOfConfig":"14"},{"size":1311,"mtime":1607522068118,"results":"20","hashOfConfig":"14"},{"size":1662,"mtime":1607530958150,"results":"21","hashOfConfig":"14"},{"size":131,"mtime":1606944955333,"results":"22","hashOfConfig":"14"},{"size":974,"mtime":1607529738542,"results":"23","hashOfConfig":"14"},{"size":648,"mtime":1607673657708,"results":"24","hashOfConfig":"14"},{"size":355,"mtime":1607877767434,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"2anu6p",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},"/home/mantoss/pix-store/src/index.js",[],["54","55"],"/home/mantoss/pix-store/src/App.js",[],"/home/mantoss/pix-store/src/reportWebVitals.js",[],"/home/mantoss/pix-store/src/components/Header.js",[],"/home/mantoss/pix-store/src/pages/Photos.js",[],"/home/mantoss/pix-store/src/pages/Cart.js",[],"/home/mantoss/pix-store/src/context/appContext.js",[],"/home/mantoss/pix-store/src/components/Image.js",["56"],"import React, {useContext} from \"react\";\nimport PropTypes from 'prop-types';\nimport {AppContext} from '../context/appContext';\nimport useHover from \"../hooks/useHover\";\n\nfunction Image({className, img}){\n    //hover state\n    // const [hovered, setHovered] = useState(false);\n    const [hovered, ref] = useHover();\n\n    const {toggleFavorite, addToCart, cartItems, removeFromCart} = useContext(AppContext);\n    \n    //conditional variables\n    const heartIcon = () => {\n        if(hovered){\n            return <i onClick={() => toggleFavorite(img.id)} className=\"ri-heart-line favorite\"></i>;\n        }else if(img.isFavorite){\n            return <i onClick={() => toggleFavorite(img.id)} className=\"ri-heart-fill favorite\"></i>\n        } else {\n            return null;\n        }\n    }\n\n    const cartIcon = () => {\n        const alreadyInCart = cartItems.some(item => item.id === img.id)\n        if(hovered){\n            return <i className=\"ri-add-circle-line cart\" onClick={() => addToCart(img)}></i>\n        } else if(alreadyInCart){\n            return <i className=\"ri-shopping-cart-fill cart\" onClick={() => removeFromCart(img.id)}></i>\n        }\n    }\n\n    return(\n        <div \n            ref={ref}\n            className={`${className} image-container`}\n        >\n            <img src={img.url} className=\"image-grid\" alt=\"picture-of-an-object\" />\n            {heartIcon()}\n            {cartIcon()}\n        </div>\n    );\n}\n\nImage.propTypes = {\n    className: PropTypes.string,\n    img: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        url: PropTypes.string.isRequired,\n        isFavorite: PropTypes.bool\n    })\n}\n\nexport default Image;","/home/mantoss/pix-store/src/utils/index.js",[],"/home/mantoss/pix-store/src/components/CartItem.js",[],"/home/mantoss/pix-store/src/hooks/useHover.js",["57"],"import {useState, useRef, useEffect} from \"react\";\n\nfunction useHover(){\n    const [hovered, setHovered] = useState(false);\n\n    const ref = useRef(null);\n\n    const enter = () => {\n        setHovered(true);\n    }\n\n    const leave = () => {\n        setHovered(false);\n    }\n\n    useEffect(() => {\n        ref.current.addEventListener(\"mouseenter\", enter);\n        ref.current.addEventListener(\"mouseleave\", leave);\n\n        return () => {\n            ref.current.removeEventListener(\"mouseenter\", enter);\n            ref.current.removeEventListener(\"mouseleave\", leave);\n        }\n    }, []);\n\n    return [hovered, ref];\n}\n\nexport default useHover;","/home/mantoss/pix-store/src/components/Footer.js",["58"],"import React from 'react';\nimport '../App.css';\n\nexport default function Footer(){\n    return(\n        <div id=\"love\">\n            <span>Made With</span>\n            <img src=\"https://img.icons8.com/dusk/64/000000/like.png\" alt=\"love\"/> \n            <span>by <a href=\"https://github.com/PJMantoss\" target=\"_blank\">Mantoss</a></span>\n        </div>\n    )\n}",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":38,"column":13,"nodeType":"65","endLine":38,"endColumn":84},{"ruleId":"66","severity":1,"message":"67","line":22,"column":17,"nodeType":"68","endLine":22,"endColumn":24},{"ruleId":"69","severity":1,"message":"70","line":9,"column":61,"nodeType":"71","endLine":9,"endColumn":76},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","react-hooks/exhaustive-deps","The ref value 'ref.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'ref.current' to a variable inside the effect, and use that variable in the cleanup function.","Identifier","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation"]