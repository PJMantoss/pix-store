[{"/home/mantoss/pix-store/src/index.js":"1","/home/mantoss/pix-store/src/App.js":"2","/home/mantoss/pix-store/src/reportWebVitals.js":"3","/home/mantoss/pix-store/src/components/Header.js":"4","/home/mantoss/pix-store/src/pages/Photos.js":"5","/home/mantoss/pix-store/src/pages/Cart.js":"6","/home/mantoss/pix-store/src/context/appContext.js":"7","/home/mantoss/pix-store/src/components/Image.js":"8","/home/mantoss/pix-store/src/utils/index.js":"9","/home/mantoss/pix-store/src/components/CartItem.js":"10"},{"size":648,"mtime":1606825697461,"results":"11","hashOfConfig":"12"},{"size":468,"mtime":1606824731037,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1606739673075,"results":"14","hashOfConfig":"12"},{"size":622,"mtime":1607414460072,"results":"15","hashOfConfig":"12"},{"size":484,"mtime":1607205012347,"results":"16","hashOfConfig":"12"},{"size":637,"mtime":1607504079663,"results":"17","hashOfConfig":"12"},{"size":1237,"mtime":1607412838199,"results":"18","hashOfConfig":"12"},{"size":1669,"mtime":1607413044826,"results":"19","hashOfConfig":"12"},{"size":131,"mtime":1606944955333,"results":"20","hashOfConfig":"12"},{"size":428,"mtime":1607517795342,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1l213vo",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/mantoss/pix-store/src/index.js",[],["45","46"],"/home/mantoss/pix-store/src/App.js",[],"/home/mantoss/pix-store/src/reportWebVitals.js",[],"/home/mantoss/pix-store/src/components/Header.js",[],"/home/mantoss/pix-store/src/pages/Photos.js",[],"/home/mantoss/pix-store/src/pages/Cart.js",["47"],"import React, { useContext, useState } from 'react';\nimport {AppContext} from \"../context/appContext\";\nimport CartItem from \"../components/CartItem\";\n\nfunction Cart(){\n    const {cartItems} = useContext(AppContext);\n\n    const cartItemElements = cartItems.map(item => (\n        <CartItem key={item.id} item={item} />\n    ))\n\n    return(\n        <main className=\"cart-page\">\n            <h1>Checkout</h1>\n            {cartItemElements}\n            <p className=\"total-cost\">Total: </p>\n            <div className=\"order-button\">\n                <button>Place Order</button>\n            </div>\n        </main>\n    )\n}\n\nexport default Cart;","/home/mantoss/pix-store/src/context/appContext.js",[],"/home/mantoss/pix-store/src/components/Image.js",["48"],"import React, {useState, useContext} from \"react\";\nimport PropTypes from 'prop-types';\nimport {AppContext} from '../context/appContext';\n\nfunction Image({className, img}){\n    //hover state\n    const [hovered, setHovered] = useState(false);\n\n    const {toggleFavorite, addToCart, cartItems, removeFromCart} = useContext(AppContext);\n    \n    //conditional variables\n    const heartIcon = () => {\n        if(hovered){\n            return <i onClick={() => toggleFavorite(img.id)} className=\"ri-heart-line favorite\"></i>;\n        }else if(img.isFavorite){\n            return <i onClick={() => toggleFavorite(img.id)} className=\"ri-heart-fill favorite\"></i>\n        } else {\n            return null;\n        }\n    }\n\n    const cartIcon = () => {\n        const alreadyInCart = cartItems.some(item => item.id === img.id)\n        if(hovered){\n            return <i className=\"ri-add-circle-line cart\" onClick={() => addToCart(img)}></i>\n        } else if(alreadyInCart){\n            return <i className=\"ri-shopping-cart-fill cart\" onClick={() => removeFromCart(img.id)}></i>\n        }\n    }\n\n    return(\n        <div \n            onMouseEnter={() => setHovered(true)} \n            onMouseLeave={() => setHovered(false)} \n            className={`${className} image-container`}\n        >\n            <img src={img.url} className=\"image-grid\" alt=\"picture-of-an-object\" />\n            {heartIcon()}\n            {cartIcon()}\n        </div>\n    );\n}\n\nImage.propTypes = {\n    className: PropTypes.string,\n    img: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        url: PropTypes.string.isRequired,\n        isFavorite: PropTypes.bool\n    })\n}\n\nexport default Image;","/home/mantoss/pix-store/src/utils/index.js",[],"/home/mantoss/pix-store/src/components/CartItem.js",["49"],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":1,"column":29,"nodeType":"56","messageId":"57","endLine":1,"endColumn":37},{"ruleId":"58","severity":1,"message":"59","line":37,"column":13,"nodeType":"60","endLine":37,"endColumn":84},{"ruleId":"61","severity":1,"message":"62","line":9,"column":12,"nodeType":"60","endLine":9,"endColumn":48},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]