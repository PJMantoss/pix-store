[{"/home/mantoss/pix-store/src/index.js":"1","/home/mantoss/pix-store/src/App.js":"2","/home/mantoss/pix-store/src/reportWebVitals.js":"3","/home/mantoss/pix-store/src/components/Header.js":"4","/home/mantoss/pix-store/src/pages/Photos.js":"5","/home/mantoss/pix-store/src/pages/Cart.js":"6","/home/mantoss/pix-store/src/context/appContext.js":"7","/home/mantoss/pix-store/src/components/Image.js":"8","/home/mantoss/pix-store/src/utils/index.js":"9"},{"size":648,"mtime":1606825697461,"results":"10","hashOfConfig":"11"},{"size":468,"mtime":1606824731037,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1606739673075,"results":"13","hashOfConfig":"11"},{"size":409,"mtime":1606744125780,"results":"14","hashOfConfig":"11"},{"size":484,"mtime":1607205012347,"results":"15","hashOfConfig":"11"},{"size":168,"mtime":1606824347069,"results":"16","hashOfConfig":"11"},{"size":1092,"mtime":1607367144221,"results":"17","hashOfConfig":"11"},{"size":1376,"mtime":1607367243017,"results":"18","hashOfConfig":"11"},{"size":131,"mtime":1606944955333,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1l213vo",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mantoss/pix-store/src/index.js",[],["41","42"],"/home/mantoss/pix-store/src/App.js",[],"/home/mantoss/pix-store/src/reportWebVitals.js",[],"/home/mantoss/pix-store/src/components/Header.js",[],"/home/mantoss/pix-store/src/pages/Photos.js",[],"/home/mantoss/pix-store/src/pages/Cart.js",[],"/home/mantoss/pix-store/src/context/appContext.js",["43"],"import React, {createContext, useState, useEffect} from 'react';\n\nconst AppContext = createContext();\n\nfunction AppContextProvider(props){\n    const [photos, setPhotos] = useState([]);\n    const [cartItems, setCartItems] = useState([]);\n\n    const addToCart = newItem => {\n        setCartItems(prevItems => [...prevItems, newItem])\n    }\n\n    const url = \"https://raw.githubusercontent.com/bobziroll/scrimba-react-bootcamp-images/master/images.json\";\n\n    useEffect(() => {\n        fetch(url)\n          .then(res => res.json())\n          .then(data => setPhotos(data))\n          .catch(err => console.error(err))\n    }, [])\n\n    const toggleFavorite = id => {\n        const updatedArr = photos.map(photo => {\n            if(photo.id === id){\n                return {...photo, isFavorite: !photo.isFavorite}\n            }\n            return photo;\n        })\n\n        setPhotos(updatedArr)\n    }\n\n    return(\n        <AppContext.Provider value={{photos, toggleFavorite, addToCart}}>\n            {props.children}\n        </AppContext.Provider>\n    )\n};\n\nexport {AppContextProvider, AppContext};","/home/mantoss/pix-store/src/components/Image.js",["44"],"import React, {useState, useContext} from \"react\";\nimport PropTypes from 'prop-types';\nimport {AppContext} from '../context/appContext';\n\nfunction Image({className, img}){\n    //hover state\n    const [hovered, setHovered] = useState(false);\n\n    const {toggleFavorite, addToCart} = useContext(AppContext);\n    \n    //conditional variables\n    const heartIcon = () => {\n        if(hovered){\n            return <i onClick={() => toggleFavorite(img.id)} className=\"ri-heart-line favorite\"></i>;\n        }else if(img.isFavorite){\n            return <i onClick={() => toggleFavorite(img.id)} className=\"ri-heart-fill favorite\"></i>\n        } else {\n            return null;\n        }\n    }\n\n    const cartIcon = hovered && <i className=\"ri-add-circle-line cart\" onClick={() => addToCart(img)}></i>;\n\n    return(\n        <div \n            onMouseEnter={() => setHovered(true)} \n            onMouseLeave={() => setHovered(false)} \n            className={`${className} image-container`}\n        >\n            <img src={img.url} className=\"image-grid\" alt=\"picture-of-an-object\" />\n            {heartIcon()}\n            {cartIcon}\n        </div>\n    );\n}\n\nImage.propTypes = {\n    className: PropTypes.string,\n    img: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        url: PropTypes.string.isRequired,\n        isFavorite: PropTypes.bool\n    })\n}\n\nexport default Image;","/home/mantoss/pix-store/src/utils/index.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":7,"column":12,"nodeType":"51","messageId":"52","endLine":7,"endColumn":21},{"ruleId":"53","severity":1,"message":"54","line":30,"column":13,"nodeType":"55","endLine":30,"endColumn":84},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'cartItems' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]